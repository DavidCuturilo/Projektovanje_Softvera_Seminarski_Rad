/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.forms.admin;

import controller.Controller;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Performance;
import model.TheatricalPlay;
import view.forms.TableModelPerformance;

/**
 *
 * @author David
 */
public class AdminPerformancePanel extends javax.swing.JFrame {
    
    private Controller controller;
    private List<Performance> newPerformances;
    private int oldPerformanceSize;

    /**
     * Creates new form AdminPerformancePanel
     */
    public AdminPerformancePanel() throws Exception {
        initComponents();
        controller = Controller.getInstance();
        newPerformances = new ArrayList<>();
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReperotar = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Performance panel");

        tblReperotar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblReperotar.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(tblReperotar);

        jButton1.setText("Dodaj novo izvodjenje");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Sacuvaj promene");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Repertoar");

        jButton2.setText("Ukloni izabrani red");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(26, 26, 26)
                        .addComponent(jButton2)
                        .addGap(38, 38, 38)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Performance performance = new Performance( new TheatricalPlay());
        TableModelPerformance tm = (TableModelPerformance)tblReperotar.getModel();
        tm.addPerformance(performance);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            TableModelPerformance tm = (TableModelPerformance)tblReperotar.getModel();
            List<Performance> newPerformances = tm.getAllPerformance();
            
            List<Performance> performances = this.controller.getAllPerformances();
            if(performances.size() == newPerformances.size()){
                JOptionPane.showMessageDialog(this, "No performance added!", "Info", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            int startIndex = performances.size();
            for(int i =startIndex; i<newPerformances.size();i++){
                Performance p = newPerformances.get(i);
                if(p.getPerformanceDate() == null || p.getStage() == null || p.getTheatricalPlay().getTitle() == null || p.getTheatricalPlay().getGenre() == null || p.getTheatricalPlay().getDuration() == 0 ){
                    JOptionPane.showMessageDialog(this, "No column can be empty!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
            boolean exist = false;
            for(int i=startIndex; i< newPerformances.size();i++){
                // provera da li je novouneti performance sa vec postojecom predstavom
                for (Performance performance : performances) {
                    if(performance.getTheatricalPlay().getTitle().equals(newPerformances.get(startIndex).getTheatricalPlay().getTitle())){
                        // ne treba da se unosi predstava
                        TheatricalPlay theatricalPlay = this.controller.getTheatricalPlayForTitle(newPerformances.get(startIndex).getTheatricalPlay().getTitle());
                        newPerformances.get(startIndex).getTheatricalPlay().setId(theatricalPlay.getId());
                        this.controller.savePerformance(newPerformances.get(startIndex));
                        exist = true;
                        break;
                    }
                }
                if(!exist) {
                        // uneti novu predstavu
                        System.out.println("Unesi novu predstavu");
                        Long theatricalPlayId = this.controller.saveTheatricalPlay(newPerformances.get(startIndex).getTheatricalPlay());
                        newPerformances.get(startIndex).getTheatricalPlay().setId(theatricalPlayId);
                        this.controller.savePerformance(newPerformances.get(startIndex));
                }
            }
            JOptionPane.showMessageDialog(this, "Successfully  saved new performances", "Success", JOptionPane.INFORMATION_MESSAGE);
            this.oldPerformanceSize++;
        } catch (Exception ex) {
            Logger.getLogger(AdminPerformancePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = tblReperotar.getSelectedRow();
        
        if(selectedRow > -1){
            if(selectedRow > oldPerformanceSize-1){
                TableModelPerformance tm = (TableModelPerformance)tblReperotar.getModel();
                tm.removePerformance(selectedRow);
            } else {
                JOptionPane.showMessageDialog(this, "This row can't be deleted", "Error", JOptionPane.ERROR_MESSAGE); 
            }
        } else{
            JOptionPane.showMessageDialog(this, "No row selected", "Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPerformancePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPerformancePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPerformancePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPerformancePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AdminPerformancePanel().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(AdminPerformancePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblReperotar;
    // End of variables declaration//GEN-END:variables

    private void prepareView() throws Exception {
        List<Performance> performances = controller.getAllPerformances();
        TableModelPerformance tm = new TableModelPerformance(performances);
        tblReperotar.setModel(tm);     
        this.oldPerformanceSize = performances.size();
    }
}
